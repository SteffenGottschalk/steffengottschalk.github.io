{"version":3,"sources":["reset.scss","base.scss","variables.scss","main.scss","Components/button.scss","Components/grid.scss","mixins.scss","Components/grid-mixins.scss","Components/header.scss","Components/footer.scss","Views/view-home.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["﻿/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0b1 | 201101 \r\n   NOTE: WORK IN PROGRESS\r\n   USE WITH CAUTION AND TEST WITH ABANDON */\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\toutline: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline; \r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\n\r\n:focus {\r\n\toutline: none;\r\n}\r\n\r\n/* remember to highlight inserts somehow! */\r\nins {\r\n\ttext-decoration: none;\r\n}\r\ndel {\r\n\ttext-decoration: line-through;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","﻿body {\r\n  font-size: $font-size-base;\r\n  font-family: $font-family-sans-serif;  \r\n  color: $text-color;\r\n  background-color: #f4f4f4;\r\n\r\n  .content-wrapper, #header-wrapper, #footer-wrapper{\r\n    margin: 0 auto;\r\n    max-width: 1200px;\r\n  }\r\n   #page-wrapper{\r\n     margin: 45px 15px;\r\n   }   \r\n}\r\n\r\n\r\na{\r\n  text-decoration: none !important;\r\n    color: $text-color;\r\n}\r\n a:hover{\r\n       color: $brand-primary !important;\r\n }\r\n  a:active{\r\n       color: $text-color;\r\n  }\r\na:visited{\r\n       color: $text-color;\r\n   }\r\n\r\nh1{ \r\nfont-size: $font-size-h1;            \r\nfont-weight: 100;\r\n}\r\n\r\nh2{ \r\nfont-size: $font-size-h2;            \r\nfont-weight: 100;\r\nmargin: 18px 0 12px 0;\r\n}\r\n\r\nh3{ \r\nfont-size: $font-size-h3;            \r\nfont-weight: 100;\r\nmargin: 12px 0 6px 0;\r\n}\r\n\r\np{\r\nfont-weight: 100;\r\nline-height: 180%;\r\nmargin: 0px 0 6px 0;\r\n}\r\n\r\n","﻿\r\n//== Colors\r\n//\r\n//## Gray and brand colors for use across Bootstrap.\r\n\r\n$gray-base:              #222 !default;\r\n$gray-darker:            lighten($gray-base, 13.5%) !default; // #222\r\n$gray-dark:              lighten($gray-base, 20%) !default;   // #333\r\n$gray:                   lighten($gray-base, 33.5%) !default; // #555\r\n$gray-light:             lighten($gray-base, 46.7%) !default; // #777\r\n$gray-lighter:           lighten($gray-base, 93.5%) !default; // #eee\r\n\r\n$brand-primary:         #00ccff !default; // #337ab7\r\n$brand-success:         #5cb85c !default;\r\n$brand-info:            #5bc0de !default;\r\n$brand-warning:         #f0ad4e !default;\r\n$brand-danger:          #d9534f !default;\r\n\r\n\r\n//== Scaffolding\r\n//\r\n//## Settings for some of the most global styles.\r\n\r\n//** Background color for `<body>`.\r\n$body-bg:               #fff !default;\r\n//** Global text color on `<body>`.\r\n$text-color:            #222 !default;\r\n\r\n//** Global textual link color.\r\n$link-color:            $brand-primary !default;\r\n//** Link hover color set via `darken()` function.\r\n$link-hover-color:      darken($link-color, 15%) !default;\r\n//** Link hover decoration.\r\n$link-hover-decoration: underline !default;\r\n\r\n\r\n\r\n$font-family-sans-serif:  \"Segoe UI\",sans-serif,Helvetica,Arial !default;\r\n$font-family-serif:       Georgia, \"Times New Roman\", Times, serif !default;\r\n//** Default monospace fonts for `<code>`, `<kbd>`, and `<pre>`.\r\n$font-family-monospace:   Menlo, Monaco, Consolas, \"Courier New\", monospace !default;\r\n$font-family-base:        $font-family-sans-serif !default;\r\n\r\n$font-size-base:          16px !default;\r\n$font-size-large:         ceil(($font-size-base * 1.25)) !default; // ~18px\r\n$font-size-small:         ceil(($font-size-base * 0.85)) !default; // ~12px\r\n\r\n$font-size-h1:            floor(($font-size-base * 2.9)) !default; // ~46px\r\n$font-size-h2:            floor(($font-size-base * 1.65)) !default; // ~26px\r\n$font-size-h3:            ceil(($font-size-base * 1.35)) !default; // ~22px\r\n$font-size-h4:            ceil(($font-size-base * 1.25)) !default; // ~18px\r\n$font-size-h5:            $font-size-base !default;\r\n$font-size-h6:            ceil(($font-size-base * 0.85)) !default; // ~12px\r\n\r\n//** Unit-less `line-height` for use in components like buttons.\r\n$line-height-base:        1.428571429 !default; // 20/14\r\n//** Computed \"line-height\" (`font-size` * `line-height`) for use with `margin`, `padding`, etc.\r\n$line-height-computed:    floor(($font-size-base * $line-height-base)) !default; // ~20px\r\n\r\n//** By default, this inherits from the `<body>`.\r\n$headings-font-family:    inherit !default;\r\n$headings-font-weight:    100 !default;\r\n$headings-line-height:    1.3 !default;\r\n$headings-color:          inherit !default;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//== Media queries breakpoints\r\n//\r\n//## Define the breakpoints at which your layout will change, adapting to different screen sizes.\r\n\r\n// Extra small screen / phone\r\n$screen-xs:                  480px !default;\r\n$screen-xs-min:              $screen-xs !default;\r\n$screen-phone:               $screen-xs-min !default;\r\n\r\n// Small screen / tablet\r\n\r\n$screen-sm:                  768px !default;\r\n$screen-sm-min:              $screen-sm !default;\r\n$screen-tablet:              $screen-sm-min !default;\r\n\r\n// Medium screen / desktop\r\n$screen-md:                  992px !default;\r\n$screen-md-min:              $screen-md !default;\r\n$screen-desktop:             $screen-md-min !default;\r\n\r\n// Large screen / wide desktop\r\n$screen-lg:                  1200px !default;\r\n$screen-lg-min:              $screen-lg !default;\r\n$screen-lg-desktop:          $screen-lg-min !default;\r\n\r\n// So media queries don't overlap when required, provide a maximum\r\n$screen-xs-max:              ($screen-sm-min - 1) !default;\r\n$screen-sm-max:              ($screen-md-min - 1) !default;\r\n$screen-md-max:              ($screen-lg-min - 1) !default;\r\n\r\n\r\n//== Grid system\r\n//\r\n//## Define your custom responsive grid.\r\n\r\n//** Number of columns in the grid.\r\n$grid-columns:              12 !default;\r\n//** Padding between columns. Gets divided in half for the left and right.\r\n$grid-gutter-width:         0px !default;\r\n// Navbar collapse\r\n//** Point at which the navbar becomes uncollapsed.\r\n$grid-float-breakpoint:     $screen-sm-min !default;\r\n//** Point at which the navbar begins collapsing.\r\n$grid-float-breakpoint-max: ($grid-float-breakpoint - 1) !default;\r\n\r\n\r\n//== Container sizes\r\n//\r\n//## Define the maximum width of `.container` for different screen sizes.\r\n\r\n// Small screen / tablet\r\n$container-tablet:             (720px + $grid-gutter-width) !default;\r\n//** For `$screen-sm-min` and up.\r\n$container-sm:                 $container-tablet !default;\r\n\r\n// Medium screen / desktop\r\n$container-desktop:            (940px + $grid-gutter-width) !default;\r\n//** For `$screen-md-min` and up.\r\n$container-md:                 $container-desktop !default;\r\n\r\n// Large screen / wide desktop\r\n$container-large-desktop:      (1140px + $grid-gutter-width) !default;\r\n//** For `$screen-lg-min` and up.\r\n$container-lg:                 $container-large-desktop !default;\r\n","// Main Scss Files\r\n@import \"reset.scss\";\r\n@import \"variables.scss\";\r\n@import \"mixins.scss\";\r\n\r\n@import \"base.scss\";\r\n\r\n\r\n/* Components */\r\n@import \"./Components/button.scss\";\r\n@import \"./Components/grid.scss\";\r\n\r\n\r\n@import \"./Components/header.scss\";\r\n@import \"./Components/footer.scss\";\r\n\r\n/* Views */\r\n@import \"./Views/view-home.scss\";\r\n@import \"./Views/view-impressum.scss\";","﻿button{\r\n    background-color: black;\r\n    color: white;\r\n}","﻿//\r\n// Grid system\r\n// --------------------------------------------------\r\n@import \"grid-mixins.scss\";\r\n\r\n// Container widths\r\n//\r\n// Set the container width, and override it for fixed navbars in media queries.\r\n\r\n.container {\r\n  @include container-fixed;\r\n\r\n  @media (min-width: $screen-sm-min) {\r\n    width: $container-sm;\r\n  }\r\n  @media (min-width: $screen-md-min) {\r\n    width: $container-md;\r\n  }\r\n  @media (min-width: $screen-lg-min) {\r\n    width: $container-lg;\r\n  }\r\n}\r\n// Fluid container\r\n//\r\n// Utilizes the mixin meant for fixed width containers, but without any defined\r\n// width for fluid, full width layouts.\r\n\r\n.container-fluid {\r\n  @include container-fixed;\r\n}\r\n\r\n\r\n// Row\r\n//\r\n// Rows contain and clear the floats of your columns.\r\n\r\n.row {\r\n  @include make-row;\r\n}\r\n\r\n\r\n// Columns\r\n//\r\n// Common styles for small and large grid columns\r\n\r\n@include make-grid-columns;\r\n\r\n\r\n// Extra small grid\r\n//\r\n// Columns, offsets, pushes, and pulls for extra small devices like\r\n// smartphones.\r\n\r\n@include make-grid(xs);\r\n\r\n\r\n// Small grid\r\n//\r\n// Columns, offsets, pushes, and pulls for the small device range, from phones\r\n// to tablets.\r\n\r\n@media (min-width: $screen-sm-min) {\r\n  @include make-grid(sm);\r\n}\r\n\r\n\r\n// Medium grid\r\n//\r\n// Columns, offsets, pushes, and pulls for the desktop device range.\r\n\r\n@media (min-width: $screen-md-min) {\r\n  @include make-grid(md);\r\n}\r\n\r\n\r\n// Large grid\r\n//\r\n// Columns, offsets, pushes, and pulls for the large desktop device range.\r\n\r\n@media (min-width: $screen-lg-min) {\r\n  @include make-grid(lg);\r\n}","﻿@import \"variables.scss\";\r\n\r\n// Clearfix\r\n//\r\n// Source: http://nicolasgallagher.com/micro-clearfix-hack/\r\n@mixin clearfix() {\r\n  &:before,\r\n  &:after {\r\n    content: \" \"; // 1\r\n    display: table; // 2\r\n  }\r\n  &:after {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n// Centered container element\r\n@mixin container-fixed($gutter: $grid-gutter-width) {\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left:  floor(($gutter / 2));\r\n  padding-right: ceil(($gutter / 2));\r\n  @include clearfix;\r\n}\r\n\r\n// Creates a wrapper for a series of columns\r\n@mixin make-row($gutter: $grid-gutter-width) {\r\n  margin-left:  ceil(($gutter / -2));\r\n  margin-right: floor(($gutter / -2));\r\n  @include clearfix;\r\n}\r\n\r\n// Generate the extra small columns\r\n@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {\r\n  position: relative;\r\n  float: left;\r\n  width: percentage(($columns / $grid-columns));\r\n  min-height: 1px;\r\n  padding-left:  ($gutter / 2);\r\n  padding-right: ($gutter / 2);\r\n}\r\n@mixin make-xs-column-offset($columns) {\r\n  margin-left: percentage(($columns / $grid-columns));\r\n}\r\n@mixin make-xs-column-push($columns) {\r\n  left: percentage(($columns / $grid-columns));\r\n}\r\n@mixin make-xs-column-pull($columns) {\r\n  right: percentage(($columns / $grid-columns));\r\n}\r\n\r\n// Generate the small columns\r\n@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-left:  ($gutter / 2);\r\n  padding-right: ($gutter / 2);\r\n\r\n  @media (min-width: $screen-sm-min) {\r\n    float: left;\r\n    width: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-sm-column-offset($columns) {\r\n  @media (min-width: $screen-sm-min) {\r\n    margin-left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-sm-column-push($columns) {\r\n  @media (min-width: $screen-sm-min) {\r\n    left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-sm-column-pull($columns) {\r\n  @media (min-width: $screen-sm-min) {\r\n    right: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n\r\n// Generate the medium columns\r\n@mixin make-md-column($columns, $gutter: $grid-gutter-width) {\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-left:  ($gutter / 2);\r\n  padding-right: ($gutter / 2);\r\n\r\n  @media (min-width: $screen-md-min) {\r\n    float: left;\r\n    width: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-md-column-offset($columns) {\r\n  @media (min-width: $screen-md-min) {\r\n    margin-left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-md-column-push($columns) {\r\n  @media (min-width: $screen-md-min) {\r\n    left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-md-column-pull($columns) {\r\n  @media (min-width: $screen-md-min) {\r\n    right: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n\r\n// Generate the large columns\r\n@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-left:  ($gutter / 2);\r\n  padding-right: ($gutter / 2);\r\n\r\n  @media (min-width: $screen-lg-min) {\r\n    float: left;\r\n    width: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-lg-column-offset($columns) {\r\n  @media (min-width: $screen-lg-min) {\r\n    margin-left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-lg-column-push($columns) {\r\n  @media (min-width: $screen-lg-min) {\r\n    left: percentage(($columns / $grid-columns));\r\n  }\r\n}\r\n@mixin make-lg-column-pull($columns) {\r\n  @media (min-width: $screen-lg-min) {\r\n    right: percentage(($columns / $grid-columns));\r\n  }\r\n}","﻿\r\n\r\n// Framework grid generation\r\n//\r\n// Used only by Bootstrap to generate the correct number of grid classes given\r\n// any value of `$grid-columns`.\r\n\r\n// [converter] This is defined recursively in LESS, but Sass supports real loops\r\n@mixin make-grid-columns($i: 1, $list: \".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}\") {\r\n  @for $i from (1 + 1) through $grid-columns {\r\n    $list: \"#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}\";\r\n  }\r\n  #{$list} {\r\n    position: relative;\r\n    // Prevent columns from collapsing when empty\r\n    min-height: 0px;\r\n    // Inner gutter via padding\r\n    \r\n    //padding-left:  ceil(($grid-gutter-width / 2));\r\n    //padding-right: floor(($grid-gutter-width / 2));\r\n  }\r\n}\r\n\r\n\r\n// [converter] This is defined recursively in LESS, but Sass supports real loops\r\n@mixin float-grid-columns($class, $i: 1, $list: \".col-#{$class}-#{$i}\") {\r\n  @for $i from (1 + 1) through $grid-columns {\r\n    $list: \"#{$list}, .col-#{$class}-#{$i}\";\r\n  }\r\n  #{$list} {\r\n    float: left;\r\n  }\r\n}\r\n\r\n\r\n@mixin calc-grid-column($index, $class, $type) {\r\n  @if ($type == width) and ($index > 0) {\r\n    .col-#{$class}-#{$index} {\r\n      width: percentage(($index / $grid-columns));\r\n    }\r\n  }\r\n  @if ($type == push) and ($index > 0) {\r\n    .col-#{$class}-push-#{$index} {\r\n      left: percentage(($index / $grid-columns));\r\n    }\r\n  }\r\n  @if ($type == push) and ($index == 0) {\r\n    .col-#{$class}-push-0 {\r\n      left: auto;\r\n    }\r\n  }\r\n  @if ($type == pull) and ($index > 0) {\r\n    .col-#{$class}-pull-#{$index} {\r\n      right: percentage(($index / $grid-columns));\r\n    }\r\n  }\r\n  @if ($type == pull) and ($index == 0) {\r\n    .col-#{$class}-pull-0 {\r\n      right: auto;\r\n    }\r\n  }\r\n  @if ($type == offset) {\r\n    .col-#{$class}-offset-#{$index} {\r\n      margin-left: percentage(($index / $grid-columns));\r\n    }\r\n  }\r\n}\r\n\r\n// [converter] This is defined recursively in LESS, but Sass supports real loops\r\n@mixin loop-grid-columns($columns, $class, $type) {\r\n  @for $i from 0 through $columns {\r\n    @include calc-grid-column($i, $class, $type);\r\n  }\r\n}\r\n\r\n\r\n// Create grid for specific class\r\n@mixin make-grid($class) {\r\n  @include float-grid-columns($class);\r\n//  @include loop-grid-columns($grid-columns, $class, width);\r\n//  @include loop-grid-columns($grid-columns, $class, pull);\r\n//  @include loop-grid-columns($grid-columns, $class, push);\r\n//  @include loop-grid-columns($grid-columns, $class, offset);\r\n}\r\n","﻿header{  \r\n    display: none;  \r\n    background-color: #fff;\r\n    border-bottom: solid 1px rgba(160, 160, 160, 0.3);\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 10000;\r\n    #logo{\r\n      float: left;\r\n      margin: 15px;\r\n    }\r\n    nav{\r\n      ul{ \r\n        li{\r\n          float: left;\r\n          margin: 15px;\r\n          padding-right: 15px; \r\n          border-right: solid 1px rgba(160, 160, 160, 0.3); \r\n        }\r\n        li:last-child{\r\n          border-right: solid 0px rgba(160, 160, 160, 0.3); \r\n        }\r\n      }\r\n    }\r\n}","﻿footer{\r\n  position: fixed;\r\n  bottom: 0px;\r\n  width: 100%;\r\n  z-index: 10000;\r\n  text-align: center;\r\n  padding: 15px 0px;\r\n  font-size: 12px;\r\n  background-color: #f4f4f4;\r\n  font-weight: 100;\r\n}\r\n\r\n@media (max-width: $screen-xs) {\r\n  #footer-wrapper{\r\n    width: 270px;  \r\n  }\r\n}","﻿#home-view{\r\n\r\n    .profile{\r\n        text-align: center;\r\n        padding: 15px;\r\n\r\n        h1{\r\n\r\n            letter-spacing: -0.01em;\r\n\r\n\r\n        }\r\n\r\n        p{\r\n\r\n            line-height: 46px;\r\n        }\r\n        \r\n        .circle{\r\n                height: 150px;\r\n                width: 150px;\r\n                border-radius: 100px;\r\n                background: url('./../images/steffen-gottschalk.jpg') center center/cover no-repeat;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n                margin-bottom: 15px;\r\n        }\r\n    }\r\n}"]}